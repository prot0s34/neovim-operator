---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: neovims.instance.neovim.prot0s.com
spec:
  group: instance.neovim.prot0s.com
  names:
    kind: Neovim
    listKind: NeovimList
    plural: neovims
    singular: neovim
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Neovim is the Schema for the neovims API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NeovimSpec defines the desired state of Neovim
            properties:
              username:
                description: Username is the name of the user for whom this Neovim
                  instance is created.
                type: string
              version:
                description: Version is the version of Neovim to be deployed.
                type: string
            type: object
          status:
            description: NeovimStatus defines the observed state of Neovim
            properties:
              ready:
                description: Ready indicates whether the Neovim instance is ready
                  to be used.
                type: boolean
            required:
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
